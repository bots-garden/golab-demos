{
	// Place your golab-demos workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// 01-simple-go-plugin/call.sh
	"Extism plugin hello world": {
		"prefix": "pdk-hello",
		"body": [
		  "package main",
		  "",
		  "import (",
		  "	\"github.com/extism/go-pdk\"",
		  ")",
		  "",
		  "//export hello",
		  "func hello()  {",
		  "	// read function argument from the memory",
		  "	input := pdk.Input()",
		  "",
		  "	// create the output",
		  "	output := \"${1:Hello} \" + string(input)",
		  "        ",
		  "	// copy output to host memory",
		  "	mem := pdk.AllocateString(output)",
		  "	",
		  "	pdk.OutputMemory(mem)",
		  "}",
		  "",
		  "func main() {}",
		  ""
		],
		"description": "Extism plugin hello world"
	  }
}